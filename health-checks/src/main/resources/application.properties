## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

debug = false

logging.level.org.springframework = INFO
logging.level.org.apache.camel.spring.boot = INFO
logging.level.org.apache.camel.health = DEBUG
logging.level.org.apache.camel.impl.health = DEBUG
logging.level.sample.camel = DEBUG

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=health
# expose liveness/readiness probes
management.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# show verbose health details (/actuator/health) so you can see Camel information also
management.endpoint.health.show-details=always

camel.springboot.name = MyCamel

# enable JMX which allows to also control health check
camel.springboot.jmx-enabled = true

# properties used in the route
myPeriod = 10s

# enable supervised route controller which will startup routes in safe manner
camel.springboot.route-controller-supervise-enabled = true

# attempt up till 10 times to start a route (and exhaust if still failing)
# when a route is exhausted then its taken out as being supervised and
# will not take part of health-check either (UNKNOWN state)
camel.springboot.route-controller-back-off-max-attempts = 10
# when starting a route (and restarts) fails all attempts
# then we can control whether the route should be influence the health-check
# and report the route as either UNKNOWN or DOWN. Setting this option to true
# will report it as DOWN otherwise its UNKNOWN
###camel.springboot.route-controller-unhealthy-on-exhausted = true

# enable health check (is automatic enabled if discovered on classpath)
# global flag to enable/disable
camel.health.enabled = true

# level of details exposed by camel-health check (full, default, or oneline)
camel.health.exposure-level = default

# find grained routes configuration per route (support wildcards)
# for example to turn of the netty route
### camel.health.exclude-pattern = netty


